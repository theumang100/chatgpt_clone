{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\r2dt-prototype\\\\stream-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [response, setResponse] = useState('');\n  const handleGenerate = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: 'who owns the open ai'\n        })\n      });\n      const reader = response.body.getReader();\n      let chunks = '';\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        chunks += new TextDecoder().decode(value);\n        setResponse(chunks);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"teEhHdFydR0COjJNARuL9EDEZdU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","response","setResponse","handleGenerate","fetch","method","headers","body","JSON","stringify","prompt","reader","getReader","chunks","done","value","read","TextDecoder","decode","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/r2dt-prototype/stream-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [response, setResponse] = useState('');\n\n  const handleGenerate = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ prompt: 'who owns the open ai' }),\n      });\n  \n      const reader = response.body.getReader();\n      let chunks = '';\n  \n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        chunks += new TextDecoder().decode(value);\n        setResponse(chunks);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleGenerate}>Generate</button>\n      <pre>{response}</pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMF,QAAQ,GAAG,MAAMG,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAE;QAAuB,CAAC;MACzD,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAGV,QAAQ,CAACM,IAAI,CAACK,SAAS,CAAC,CAAC;MACxC,IAAIC,MAAM,GAAG,EAAE;MAEf,OAAO,IAAI,EAAE;QACX,MAAM;UAAEC,IAAI;UAAEC;QAAM,CAAC,GAAG,MAAMJ,MAAM,CAACK,IAAI,CAAC,CAAC;QAC3C,IAAIF,IAAI,EAAE;QACVD,MAAM,IAAI,IAAII,WAAW,CAAC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACzCb,WAAW,CAACW,MAAM,CAAC;MACrB;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAQwB,OAAO,EAAEnB,cAAe;MAAAkB,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClD5B,OAAA;MAAAuB,QAAA,EAAMpB;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAAC1B,EAAA,CAjCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}